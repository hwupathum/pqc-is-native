name: Linux x64 Workflow

on:
  workflow_dispatch:

env:
  OPENSSL_INSTALL: ${{ github.workspace }}/build/openssl
  APR_INSTALL: ${{ github.workspace }}/build/apr
  OQS_INSTALL: ${{ github.workspace }}/build/oqs
  OUTPUT_DIR: ${{ github.workspace }}/lib

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Required Libraries
        run: |
            sudo apt install cmake libtool-bin
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Checkout provider
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: open-quantum-safe/oqs-provider
          ref: 0.5.3
          path: oqs-provider
      - name: Checkout openssl
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: openssl/openssl
          ref: openssl-3.2.1
          path: openssl
      - name: Checkout liboqs
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: open-quantum-safe/liboqs
          ref: 0.9.2
          path: liboqs
      - name: Checkout apr
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: apache/apr
          ref: 1.7.4
          path: apr
      - name: Checkout tcnative
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: apache/tomcat-native
          ref: 1.3.0
          path: tcnative
      - name: Build openssl
        run: |
          ./Configure --prefix=$OPENSSL_INSTALL  no-shared -fPIC --openssldir=$OUTPUT_DIR
          make && make install_sw
        working-directory: openssl
      - name: Build liboqs
        run: |
          cmake -DOPENSSL_ROOT_DIR=$OPENSSL_INSTALL -DCMAKE_INSTALL_PREFIX=$OQS_INSTALL -S . -B _build 
          cmake --build _build
          cmake --install _build
        working-directory: liboqs
      - name: Build oqs-provider
        run: |
          liboqs_DIR=$OQS_INSTALL cmake -DOPENSSL_ROOT_DIR=$OPENSSL_INSTALL -S . -B _build && cmake --build _build
        working-directory: oqs-provider
      - name: Build APR
        env:
          APR_FILE_PATH: ${{ github.workspace }}/build/apr/lib/libapr-1.la
        run: |
          # Disable automatic exit on error
          set +e
          ./buildconf
          ./configure --prefix=$APR_INSTALL
          make && make install
          # Comment or delete the specified sections using awk
          # awk '/dlname=/ {$0="#"$0} /library_names=/ {$0="#"$0} {print}' "$APR_FILE_PATH" > "$APR_FILE_PATH.temp"
          # mv "$APR_FILE_PATH.temp" "$APR_FILE_PATH"
          # echo "Sections in libapr-1.la edited successfully."
        working-directory: apr
      - name: Build Tomcat Native
        run: |
          sh buildconf --with-apr=../../apr
          ./configure --with-apr=$APR_INSTALL --with-ssl=$OPENSSL_INSTALL --prefix=$GITHUB_WORKSPACE
          make && make install
        working-directory: tcnative/native
      - name: Archive Tomcat Native Files
        uses: actions/upload-artifact@v4
        with:
          name: tcnative
          path: lib
      - name: Archive OQS Provider
        uses: actions/upload-artifact@v4
        with:
          name: oqs-provider
          path: oqs-provider/_build/lib
